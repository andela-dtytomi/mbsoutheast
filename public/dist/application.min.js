"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mb-south-east",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","angularFileUpload","duScroll"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("admin"),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Admin","admin","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("admin").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin-dashboard",{url:"/admin",templateUrl:"modules/admin/views/admin.dashboard.html"}).state("createBlog",{url:"/admin/blog/create",templateUrl:"modules/admin/views/create-blog.client.view.html"})}]),angular.module("admin").controller("AdminController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.myVar=[0,0,0,0],$scope.goEvent=function(index){$scope.myVar[index]=Math.abs($scope.myVar[index]-1)}}]),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){console.log($scope.article);var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("about",{url:"/aboutus",templateUrl:"modules/core/views/about.html"}).state("services",{url:"/services",templateUrl:"modules/core/views/services.html"}).state("greentech",{url:"/greentech",templateUrl:"modules/core/views/greentech.html"}).state("contact",{url:"/contact",templateUrl:"modules/core/views/contact.form.html"}).state("poured walls",{url:"/pouredwalls",templateUrl:"modules/core/views/poured.in.place.building.walls.html"}).state("Conventional Slab-on-Grade",{url:"/slabongrade",templateUrl:"modules/core/views/slab.on.grade.html"}).state("Concrete and Steel structures ",{url:"/candss",templateUrl:"modules/core/views/candss.html"}).state("Poured in Place Technical Site Walls",{url:"/pinpt",templateUrl:"modules/core/views/pinpt.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication","$timeout",function($scope,Authentication,$timeout){function loadSlides(){$timeout($scope.nextSlide,$scope.INTERVAL)}$scope.authentication=Authentication,$scope.INTERVAL=3e3;$scope.slides=[{image:"/modules/core/img/home/Home 3of 3.jpg"},{image:"/modules/core/img/elevated-PT1.jpg"},{image:"/modules/core/img/P2110387.jpg"}];$scope.currentIndex=0,$scope.setCurrentSlideIndex=function(index){$scope.currentIndex=index},$scope.isCurrentSlideIndex=function(index){return $scope.currentIndex===index},$scope.prevSlide=function(){$scope.currentIndex=$scope.currentIndex<$scope.slides.length-1?++$scope.currentIndex:0},$scope.nextSlide=function(){$scope.currentIndex=$scope.currentIndex>0?--$scope.currentIndex:$scope.slides.length-1,$timeout($scope.nextSlide,$scope.INTERVAL)},loadSlides()}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication","$upload","Users",function($scope,$http,$location,Authentication,$upload,Users){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.source1={},$scope.source2={},$scope.master={},$scope.user={},$scope.steps=["Personal Details","Create your account","Upload your Profile Picture"],$scope.selection=$scope.steps[0],$scope.getCurrentStepIndex=function(){return _.indexOf($scope.steps,$scope.selection)},$scope.goToStep=function(index){_.isUndefined($scope.steps[index])||($scope.selection=$scope.steps[index])},$scope.hasNextStep=function(){var stepIndex=$scope.getCurrentStepIndex(),nextStep=stepIndex+1;return!_.isUndefined($scope.steps[nextStep])},$scope.hasPreviousStep=function(){var stepIndex=$scope.getCurrentStepIndex(),previousStep=stepIndex-1;return!_.isUndefined($scope.steps[previousStep])},$scope.incrementStep=function(user){if($scope.hasNextStep()){var stepIndex=$scope.getCurrentStepIndex();console.log($scope.selection),"Personal Details"===$scope.selection?angular.copy(user,$scope.source1):"Create your account"===$scope.selection&&angular.copy(user,$scope.source2),angular.extend($scope.master,$scope.source2,$scope.source1);var nextStep=stepIndex+1;$scope.selection=$scope.steps[nextStep]}},$scope.decrementStep=function(){if($scope.hasPreviousStep()){var stepIndex=$scope.getCurrentStepIndex(),previousStep=stepIndex-1;$scope.selection=$scope.steps[previousStep]}},$scope.onFileSelect=function($files){$scope.uploadProgress=0,$scope.files=$files,$scope.files&&($scope.correctFormat="image/jpeg"===$scope.files[0].type||"image/png"===$scope.files[0].type?!0:!1)},$scope.reset=function(){return angular.copy($scope.master,$scope.user),console.log($scope.master),console.log($scope.user),$scope.user},$scope.uploadProgress=0,$scope.signup=function(){$scope.reset();new Users($scope.user);console.log($scope.user),$scope.upload=$upload.upload({url:"/auth/signup",method:"POST",data:$scope.user,file:$scope.files[0]}).progress(function(evt){$scope.uploadProgress=parseInt(100*evt.loaded/evt.total,10)}).success(function(response){$scope.authentication.user=response,$location.path("/admin")}).error(function(err,response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.user).success(function(response){$scope.authentication.user=response,console.log(response),$location.path("/admin")}).error(function(response){$scope.error=response.message})}}]).directive("progressBar",[function(){return{link:function($scope,el,attrs){$scope.$watch(attrs.progressBar,function(newValue){el.css("width",newValue.toString()+"%")})}}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);